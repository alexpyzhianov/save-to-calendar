{"version":3,"sources":["gapi.ts","utils.ts","NewEventPage.tsx","TipPage.tsx","InstallPage.tsx","LogInPage.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["CLIENT_ID","API_KEY","SCOPES","DISCOVERY_DOCS","utcWithTimezone","signIn","gapi","auth2","getAuthInstance","signOut","SupportedLanguages","urlRegex","LANG","navigator","languages","split","t","variants","HOURS","Array","fill","map","_","i","Text","TODAY","en","ru","TOMORROW","TWO","WEEK","MONTH","YEAR","SUCCESS","FAIL","ENTER","SELECT_DATE","SELECT_TIME","SAVE","DATES","text","value","startOfToday","startOfTomorrow","addDays","addWeeks","addMonths","addYears","NewEventPage","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","userTitle","setTitle","_React$useState3","_React$useState4","errorMessage","setErrorMessage","_React$useState5","_React$useState6","successMessage","setSuccessMessage","_React$useState7","Math","min","getHours","Date","_React$useState8","preferredHour","setPreferredHour","_React$useState9","_React$useState10","preferredDate","setPreferredDay","title","more","moreIsUrl","match","useEffect","setTimeout","titleElement","react_default","a","createElement","className","placeholder","onChange","e","target","moreElement","href","rel","style","height","htmlFor","name","id","parse","_ref","key","toISOString","parseInt","h","concat","disabled","onClick","url","start","console","log","client","calendar","events","insert","calendarId","resource","summary","description","dateTime","formatDate","end","addHours","insertEvent","setHours","then","window","history","replaceState","catch","TIP","LOG_OUT","TipPage","Fragment","dangerouslySetInnerHTML","__html","PROMO","TITLE","NOW","CHROME","CHROME_TIP","ALREADY","GET","InstallPage","wasInstalled","installEvent","prompt","CAUTION","LoginPage","App","setLoginStatus","isAppMode","matchMedia","matches","isLoggedIn","setIsLoggedIn","setWasInstalled","setInstallEvent","addEventListener","gapiScript","document","src","onGapiLoad","load","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","init","apiKey","clientId","discoveryDocs","scope","isSignedIn","listen","get","stop","body","appendChild","_getTitleAndMore","searchParams","URL","location","urlInMore","length","replace","trim","getTitleAndMore","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","react","src_App","getElementById","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.db115911.chunk.js","sourcesContent":["import formatDate from \"date-fns/format\"\nimport addHours from \"date-fns/add_hours\"\n\ndeclare const gapi: any\ndeclare global {\n    interface Window {\n        onGapiLoad: any\n    }\n}\n\nconst CLIENT_ID =\n    \"937378615319-ismhml4chkkd9let2k6su6o40ip43lor.apps.googleusercontent.com\"\nconst API_KEY = \"AIzaSyAAoo9d_gRLhkrbqzdstpsGQ7W93namgeI\"\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\nconst DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n]\n\nconst utcWithTimezone = \"YYYY-MM-DDTHH:mm:ss.SSSZ\"\n\nexport function initGapiClient(setLoginStatus: (loggedIn: boolean) => void) {\n    return () => {\n        const gapiScript = document.createElement(\"script\")\n        gapiScript.src = \"https://apis.google.com/js/api.js?onload=onGapiLoad\"\n\n        window.onGapiLoad = () => {\n            gapi.load(\"client:auth2\", async () => {\n                await gapi.client.init({\n                    apiKey: API_KEY,\n                    clientId: CLIENT_ID,\n                    discoveryDocs: DISCOVERY_DOCS,\n                    scope: SCOPES,\n                })\n\n                gapi.auth2.getAuthInstance().isSignedIn.listen(setLoginStatus)\n\n                const isLoggedIn = gapi.auth2.getAuthInstance().isSignedIn.get()\n                setLoginStatus(isLoggedIn)\n            })\n        }\n\n        document.body.appendChild(gapiScript)\n    }\n}\n\nexport function signIn() {\n    return gapi.auth2.getAuthInstance().signIn()\n}\n\nexport function signOut() {\n    return gapi.auth2.getAuthInstance().signOut()\n}\n\nexport function insertEvent(title: string, url: string, start: Date) {\n    console.log(title, url, start)\n\n    return gapi.client.calendar.events.insert({\n        calendarId: \"primary\",\n        resource: {\n            summary: title,\n            description: url,\n            start: {\n                dateTime: formatDate(start, utcWithTimezone),\n            },\n            end: {\n                dateTime: formatDate(addHours(start, 1), utcWithTimezone),\n            },\n        },\n    })\n}\n","export const urlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/\n\nexport const LANG = (\n    (navigator && navigator.languages && navigator.languages[0]) ||\n    \"en-US\"\n).split(\"-\")[0]\n\nexport enum SupportedLanguages {\n    RU = \"ru\",\n    EN = \"en\",\n}\n\nexport function t(variants: { [lang: string]: string }) {\n    return variants[LANG] || variants[\"en\"]\n}\n","import React from \"react\"\nimport { urlRegex, t } from \"./utils\"\nimport {\n    startOfTomorrow,\n    addWeeks,\n    addMonths,\n    addYears,\n    startOfToday,\n    setHours,\n    getHours,\n    parse,\n    addDays,\n} from \"date-fns\"\nimport { insertEvent } from \"./gapi\"\n\nexport interface NewEventPageProps {\n    title: string | null\n    more: string | null\n}\n\nconst HOURS = Array(24)\n    .fill(0)\n    .map((_, i) => i)\n\nconst Text = {\n    TODAY: t({ en: \"Today\", ru: \"Сегодня\" }),\n    TOMORROW: t({ en: \"Tomorrow\", ru: \"Завтра\" }),\n    TWO: t({ en: \"In two days\", ru: \"Через два дня\" }),\n    WEEK: t({ en: \"In a week\", ru: \"Через неделю\" }),\n    MONTH: t({ en: \"In a month\", ru: \"Через месяц\" }),\n    YEAR: t({ en: \"In a year\", ru: \"Через год\" }),\n    SUCCESS: t({\n        en: \"Saved to Calendar!\",\n        ru: \"Добавлено в календарь!\",\n    }),\n    FAIL: t({\n        en: \"Something went wrong :(\",\n        ru: \"Упс, что-то пошло не так :(\",\n    }),\n    ENTER: t({\n        en: \"Enter a title\",\n        ru: \"Добавьте заголовок\",\n    }),\n    SELECT_DATE: t({\n        en: \"Pick a day:\",\n        ru: \"Выберите день:\",\n    }),\n    SELECT_TIME: t({\n        en: \"Pick a time:\",\n        ru: \"Выберите время:\",\n    }),\n    SAVE: t({\n        en: \"Save\",\n        ru: \"Сохранить\",\n    }),\n}\n\nconst DATES = [\n    { text: Text.TODAY, value: () => startOfToday() },\n    { text: Text.TOMORROW, value: () => startOfTomorrow() },\n    { text: Text.TWO, value: () => addDays(startOfToday(), 2) },\n    { text: Text.WEEK, value: () => addWeeks(startOfToday(), 1) },\n    { text: Text.MONTH, value: () => addMonths(startOfToday(), 1) },\n    { text: Text.YEAR, value: () => addYears(startOfToday(), 1) },\n]\n\nexport function NewEventPage(props: NewEventPageProps) {\n    const [userTitle, setTitle] = React.useState(\"\")\n    const [errorMessage, setErrorMessage] = React.useState(\"\")\n    const [successMessage, setSuccessMessage] = React.useState(\"\")\n    const [preferredHour, setPreferredHour] = React.useState(\n        Math.min(23, getHours(new Date()) + 2),\n    )\n    const [preferredDate, setPreferredDay] = React.useState(startOfToday())\n\n    const title = props.title || userTitle\n    const more = props.more || \"\"\n    const moreIsUrl = more && more.match(urlRegex)\n\n    const createEvent = () =>\n        insertEvent(title, more, setHours(preferredDate, preferredHour))\n            .then(() => {\n                window.history.replaceState(null, \"\", \"/\")\n                setSuccessMessage(Text.SUCCESS)\n            })\n            .catch(() => {\n                setErrorMessage(Text.FAIL)\n            })\n\n    React.useEffect(() => {\n        setTimeout(() => setSuccessMessage(\"\"), 3000)\n    }, [successMessage])\n\n    const titleElement = props.title ? (\n        <p>\n            <strong>{props.title}</strong>\n        </p>\n    ) : (\n        <input\n            className=\"input\"\n            value={userTitle}\n            placeholder={Text.ENTER}\n            onChange={e => setTitle(e.target.value)}\n        />\n    )\n\n    const moreElement =\n        more && moreIsUrl ? (\n            <a href={more} target=\"_blank\" rel=\"noopener noreferrer\">\n                {more}\n            </a>\n        ) : more ? (\n            <p>{more}</p>\n        ) : null\n\n    return (\n        <div className=\"hero is-fullheight\">\n            <div className=\"section\" style={{ height: \"30vh\" }}>\n                <div className=\"container\">\n                    <div className=\"field\">\n                        {errorMessage ? (\n                            <div className=\"notification is-warning\">\n                                {errorMessage}\n                            </div>\n                        ) : successMessage ? (\n                            <div className=\"notification is-success\">\n                                {successMessage}\n                            </div>\n                        ) : (\n                            <div className=\"box\">\n                                <div className=\"field\">{titleElement}</div>\n                                <div className=\"field\">{moreElement}</div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <div className=\"field\">\n                        <label htmlFor=\"day-select\" className=\"label\">\n                            {Text.SELECT_DATE}\n                        </label>\n                        <div className=\"select\">\n                            <select\n                                name=\"Day\"\n                                id=\"day-select\"\n                                onChange={e =>\n                                    setPreferredDay(parse(e.target.value))\n                                }\n                            >\n                                {DATES.map(({ text, value }) => (\n                                    <option\n                                        key={text}\n                                        value={value().toISOString()}\n                                    >\n                                        {text}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"time-input\" className=\"label\">\n                            {Text.SELECT_TIME}\n                        </label>\n                        <div className=\"select\">\n                            <select\n                                id=\"time-input\"\n                                value={preferredHour}\n                                onChange={e =>\n                                    setPreferredHour(parseInt(e.target.value))\n                                }\n                            >\n                                {HOURS.map(h => (\n                                    <option\n                                        key={h}\n                                        value={h}\n                                    >{`${h}:00`}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <footer className=\"hero-foot\">\n                <div className=\"section container has-text-centered\">\n                    <button\n                        className=\"button is-primary\"\n                        disabled={!title}\n                        onClick={createEvent}\n                    >\n                        {Text.SAVE}\n                    </button>\n                </div>\n            </footer>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { signOut } from \"./gapi\"\nimport { t } from \"./utils\"\n\nconst Text = {\n    TIP: t({\n        en:\n            \"Now open the <strong>Share</strong> dialog in any of your apps and select <strong>Save&nbsp;to&nbsp;Calendar</strong>.\",\n        ru:\n            \"Теперь вы можете выбрать <strong>Save&nbsp;to&nbsp;Calendar</strong> в меню <strong>Поделиться</strong>  любого приложения и добавить интересный материал в календарь.\",\n    }),\n    LOG_OUT: t({\n        en: \"Log out of Google Calendar\",\n        ru: \"Отключить Google Calendar\",\n    }),\n}\n\nexport function TipPage() {\n    // const [isModalOpen, setModalOpen] = React.useState(false)\n    // const openModal = React.useCallback(() => setModalOpen(true), [\n    //     setModalOpen,\n    // ])\n    // const closeModal = React.useCallback(() => setModalOpen(false), [\n    //     setModalOpen,\n    // ])\n\n    return (\n        <>\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body container has-text-centered\">\n                    <p dangerouslySetInnerHTML={{ __html: Text.TIP }} />\n                </div>\n                <div className=\"hero-foot container\">\n                    <section className=\"section\">\n                        <button className=\"button is-big\" onClick={signOut}>\n                            {Text.LOG_OUT}\n                        </button>\n                    </section>\n                </div>\n            </div>\n\n            {/* <div className={`modal ${isModalOpen ? \"is-active\" : \"\"}`}>\n                <div className=\"modal-background\" />\n                <div className=\"modal-content\">\n                    <div className=\"card\">\n                        <div className=\"card-content\">\n                            <div className=\"field\">\n                                <p>\n                                    Are you sure you want to stop using the app?\n                                </p>\n                            </div>\n                            <div className=\"field buttons\">\n                                <button\n                                    className=\"button is-primary\"\n                                    onClick={closeModal}\n                                >\n                                    Keep using\n                                </button>\n                                <button\n                                    className=\"button\"\n                                    onClick={() => {\n                                        closeModal()\n                                        signOut()\n                                    }}\n                                >\n                                    Log out\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    className=\"modal-close is-large\"\n                    aria-label=\"close\"\n                    onClick={closeModal}\n                />\n            </div> */}\n        </>\n    )\n}\n","import React from \"react\"\nimport { t } from \"./utils\"\n\nexport interface InstallPageProps {\n    wasInstalled: boolean\n    installEvent: InstallEvent | null\n}\n\nexport type UserChoiceOutcome = \"accepted\" | \"rejected\"\n\nexport interface InstallEvent extends Event {\n    prompt(): void\n    userChoice: Promise<{ outcome: UserChoiceOutcome }>\n}\n\nconst Text = {\n    PROMO: t({\n        en: `This will install <strong>Save to Calendar</strong>, a new and awesome way to save content for later.`,\n        ru: `Установить приложение <strong>Save to Calendar</strong>, которое сохраняет статьи \"на потом\" в ваш календарь.`,\n    }),\n    TITLE: t({\n        en: \"Save to Calendar\",\n        ru: \"Save to Calendar\",\n    }),\n    NOW: t({\n        en: \"Now try it out!\",\n        ru: \"Получилось! 🎉\",\n    }),\n    CHROME: t({\n        en: \"Get Google Chrome\",\n        ru: \"Установить Google Chrome\",\n    }),\n    CHROME_TIP: t({\n        en:\n            \"(opening this site in Google Chrome might help if you are on Android)\",\n        ru: \"(если вы на андроиде, попробуйте зайти через Google Chrome)\",\n    }),\n    ALREADY: t({\n        en:\n            \"Looks like we don't yet support your device. Or maybe you already have <strong>Save to Calendar</strong> installed, check your apps menu.\",\n        ru:\n            \"Кажется, мы пока не поддерживаем ваше устройство, 😭 но возможно, вы уже установили <strong>Save to Calendar</strong> - поищите среди других приложений. 🤷‍\",\n    }),\n    GET: t({\n        en: \"Get it!\",\n        ru: \"Установить\",\n    }),\n}\n\nexport function InstallPage({ wasInstalled, installEvent }: InstallPageProps) {\n    return (\n        <section className=\"hero is-fullheight\">\n            <div className=\"hero-body\">\n                <div className=\"container has-text-centered\">\n                    <div className=\"field\">\n                        {wasInstalled && <p>{Text.NOW}</p>}\n                        {!wasInstalled && installEvent && (\n                            <p\n                                dangerouslySetInnerHTML={{ __html: Text.PROMO }}\n                            />\n                        )}\n                        {!wasInstalled && !installEvent && (\n                            <p\n                                dangerouslySetInnerHTML={{\n                                    __html: Text.ALREADY,\n                                }}\n                            />\n                        )}\n                    </div>\n\n                    {!wasInstalled && installEvent && (\n                        <div className=\"field\">\n                            <button\n                                className=\"button is-big is-primary\"\n                                disabled={!installEvent}\n                                onClick={() =>\n                                    installEvent && installEvent.prompt()\n                                }\n                            >\n                                {Text.GET}\n                            </button>\n                        </div>\n                    )}\n\n                    {!wasInstalled && !installEvent && (\n                        <>\n                            <div className=\"field\">\n                                <p className=\"has-text-grey\">\n                                    {Text.CHROME_TIP}\n                                </p>\n                            </div>\n                            <div className=\"field\">\n                                <a\n                                    href=\"https://play.google.com/store/apps/details?id=com.android.chrome\"\n                                    rel=\"noopener noreferrer\"\n                                    target=\"_blank\"\n                                    className=\"button is-big\"\n                                >\n                                    {Text.CHROME}\n                                </a>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React from \"react\"\nimport { signIn } from \"./gapi\"\nimport { t } from \"./utils\"\n\nconst Text = {\n    CAUTION: t({\n        en: \"(for adding events only)\",\n        ru:\n            \"(приложение ничего не читает и не удаляет, только создает новые события)\",\n    }),\n    LOG_OUT: t({\n        en: \"Log in with Google Calendar\",\n        ru: \"Войти через Google Calendar\",\n    }),\n}\n\nexport function LoginPage() {\n    return (\n        <section className=\"hero is-fullheight\">\n            <div className=\"hero-body\">\n                <div className=\"container has-text-centered\">\n                    <div className=\"field\">\n                        <button\n                            className=\"button is-big is-primary\"\n                            onClick={signIn}\n                        >\n                            {Text.LOG_OUT}\n                        </button>\n                    </div>\n\n                    <div className=\"field\">\n                        <p className=\"has-text-grey\">{Text.CAUTION}</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React from \"react\"\nimport { initGapiClient } from \"./gapi\"\nimport { NewEventPage } from \"./NewEventPage\"\nimport { TipPage } from \"./TipPage\"\nimport { InstallPage, InstallEvent } from \"./InstallPage\"\nimport { LoginPage } from \"./LogInPage\"\nimport { urlRegex } from \"./utils\"\n\nfunction getTitleAndMore() {\n    const { searchParams } = new URL(window.location.href)\n    const title = searchParams.get(\"title\") || \"\"\n    const more = searchParams.get(\"url\") || searchParams.get(\"text\") || \"\"\n\n    const urlInMore = more && more.match(urlRegex)\n\n    if (more && urlInMore && urlInMore.length > 0) {\n        return {\n            title: title || more.replace(urlInMore[0], \"\").trim(),\n            more: urlInMore[0],\n        }\n    } else {\n        return { title, more }\n    }\n}\n\nfunction App() {\n    const isAppMode = matchMedia(\"(display-mode: standalone)\").matches\n    const [isLoggedIn, setIsLoggedIn] = React.useState<boolean | null>(null)\n    const [wasInstalled, setWasInstalled] = React.useState(false)\n    const [installEvent, setInstallEvent] = React.useState<InstallEvent | null>(\n        null,\n    )\n\n    React.useEffect(() => {\n        window.addEventListener(\"beforeinstallprompt\", e => {\n            setInstallEvent(e as InstallEvent)\n        })\n    }, [])\n\n    React.useEffect(() => {\n        window.addEventListener(\"appinstalled\", () => setWasInstalled(true))\n    }, [])\n\n    React.useEffect(initGapiClient(setIsLoggedIn), [])\n\n    const { title, more } = getTitleAndMore()\n\n    if (!isAppMode) {\n        return (\n            <InstallPage\n                wasInstalled={wasInstalled}\n                installEvent={installEvent}\n            />\n        )\n    } else if (isLoggedIn === null) {\n        return null\n    } else if (isLoggedIn === false) {\n        return <LoginPage />\n    } else if (title || more) {\n        return <NewEventPage title={title} more={more} />\n    } else {\n        return <TipPage />\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\")\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\")\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            )\n        })\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport \"bulma/css/bulma.css\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}
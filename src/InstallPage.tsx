import React from "react"
import { t } from "./utils"

export interface InstallPageProps {
    wasInstalled: boolean
    installEvent: InstallEvent | null
}

export type UserChoiceOutcome = "accepted" | "rejected"

export interface InstallEvent extends Event {
    prompt(): void
    userChoice: Promise<{ outcome: UserChoiceOutcome }>
}

const Text = {
    PROMO: (title: string) =>
        t({
            en: `This will install <strong>${title}</strong> a new and awesome way to save content for later.`,
            ru: `–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <strong>${title}</strong>, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç—å–∏ "–Ω–∞ –ø–æ—Ç–æ–º" –≤ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å.`,
        }),
    TITLE: t({
        en: "Save to Calendar",
        ru: "Save to Calendar",
    }),
    NOW: t({
        en: "Now start using it!",
        ru: "–ü–æ–ª—É—á–∏–ª–æ—Å—å! üéâ",
    }),
    ALREADY: t({
        en:
            "Sorry, we don't support your device at the moment. Or maybe you already have <strong>Save to Calendar</strong> installed, check your apps menu.",
        ru:
            "–ö–∞–∂–µ—Ç—Å—è, –º—ã –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, üò≠ –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ <strong>Save to Calendar</strong> - –ø–æ–∏—â–∏—Ç–µ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. ü§∑‚Äç",
    }),
    GET: t({
        en: "Get it!",
        ru: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
    }),
}

export function InstallPage({ wasInstalled, installEvent }: InstallPageProps) {
    return (
        <section className="hero is-fullheight">
            <div className="hero-body">
                <div className="container has-text-centered">
                    <div className="field">
                        {wasInstalled && <p>{Text.NOW}</p>}
                        {!wasInstalled && installEvent && (
                            <p
                                dangerouslySetInnerHTML={{
                                    __html: Text.PROMO(Text.TITLE),
                                }}
                            />
                        )}
                        {!wasInstalled && !installEvent && (
                            <p
                                dangerouslySetInnerHTML={{
                                    __html: Text.ALREADY,
                                }}
                            />
                        )}
                    </div>

                    {!wasInstalled && (
                        <div className="field">
                            <button
                                className="button is-big is-primary"
                                disabled={!installEvent}
                                onClick={() =>
                                    installEvent && installEvent.prompt()
                                }
                            >
                                {Text.GET}
                            </button>
                        </div>
                    )}
                </div>
            </div>
        </section>
    )
}
